const axios = require('axios');

const SERVER_URL = 'http://localhost:3000';

async function testAPI() {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–ø–∏—Å—É –Ω–∞ –ø—Ä–∏–π–æ–º\n');

    try {
        // –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤'—è —Å–µ—Ä–≤–µ—Ä–∞
        console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤\'—è —Å–µ—Ä–≤–µ—Ä–∞...');
        const healthResponse = await axios.get(`${SERVER_URL}/api/health`);
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î:', healthResponse.data);
        console.log('');

        // –¢–µ—Å—Ç 2: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —á–∞—Å—ñ–≤
        console.log('2Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —á–∞—Å—ñ–≤...');
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        const dateString = tomorrow.toISOString().split('T')[0];
        
        const timesResponse = await axios.get(`${SERVER_URL}/api/available-times/${dateString}`);
        console.log(`‚úÖ –î–æ—Å—Ç—É–ø–Ω—ñ –≥–æ–¥–∏–Ω–∏ –Ω–∞ ${dateString}:`, timesResponse.data.availableSlots?.length || 0, '—Å–ª–æ—Ç—ñ–≤');
        console.log('');

        // –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–∞–±—ñ–Ω–µ—Ç—ñ–≤
        console.log('3Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–∞–±—ñ–Ω–µ—Ç—ñ–≤...');
        const cabinetsResponse = await axios.get(`${SERVER_URL}/api/cabinets`);
        console.log('‚úÖ –ö–∞–±—ñ–Ω–µ—Ç–∏:', cabinetsResponse.data.data?.length || 0, '–∫–∞–±—ñ–Ω–µ—Ç—ñ–≤');
        console.log('');

        // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Å (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î —Ç–æ–∫–µ–Ω)
        if (process.env.CRM_API_TOKEN && process.env.CRM_API_TOKEN !== 'YOUR_API_TOKEN_HERE') {
            console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Å –Ω–∞ –ø—Ä–∏–π–æ–º...');
            const testBooking = {
                firstName: '–¢–µ—Å—Ç',
                lastName: '–¢–µ—Å—Ç–æ–≤–∏–π',
                phone: '+380991234567',
                email: 'test@example.com',
                appointmentDate: dateString,
                appointmentTime: timesResponse.data.availableSlots?.[0] || '10:00'
            };

            try {
                const bookingResponse = await axios.post(`${SERVER_URL}/api/book-appointment`, testBooking);
                console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Å —Å—Ç–≤–æ—Ä–µ–Ω–æ:', bookingResponse.data);
            } catch (bookingError) {
                console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É (–º–æ–∂–ª–∏–≤–æ, —á–∞—Å –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π):', bookingError.response?.data?.error || bookingError.message);
            }
        } else {
            console.log('4Ô∏è‚É£ –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É (–Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ CRM —Ç–æ–∫–µ–Ω)');
        }

        console.log('\nüéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error.response?.data || error.message);
        console.log('\nüí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ:');
        console.log('   - –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π (npm start)');
        console.log('   - CRM —Ç–æ–∫–µ–Ω –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –≤ config.env');
        console.log('   - CRM API –¥–æ—Å—Ç—É–ø–Ω–∏–π');
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testAPI();
